/**
\page widgets

This page is supposed to give a short overview over the different kinds of
widgets implemented in SGUI.

<table>
<tr><th>Screenshot</th><th>Description</th></tr>
<tr>
<td>
\image html button.png
</td>
<td>
A simple push (see \ref sgui_button_create) that generates an event when
clicked and released. Can also be configured to act as a toggle button to
stay in a state (either in or out). Toggle buttons can be grouped together
like radio buttons. Buttons are not restricted to text but can also display
icons. In a group of toggle buttons, only one at a time can be selected.
</td>
</tr>
<tr>
<td>
\image html check.png
</td>
<td>
A check box (see \ref sgui_checkbox_create). Generates an event when checked
or unchecked.
</td>
</tr>
<tr>
<td>
\image html group.png
</td>
<td>
A radio button (see \ref sgui_radio_button_create). Several radio buttons can
be connected to a group. In a group of radio buttons, only one at a time can
be selected.
</td>
</tr>
<tr>
<td>
\image html slider.png
</td>
<td>
An \ref sgui_slider widget. Sliders can be drawn horizontaly or verticaly. The
minimum and maximum value, as well as the increments can be configured. An
event is generated when the value changes.
</td>
</tr>
<tr>
<td>
\image html edit.png
</td>
<td>
An \ref sgui_edit_box widget. Text can be selected and copied/pasted via the
systems clipboard. An edit box can optionally only be specialized for numeric
input (see \ref sgui_numeric_edit and \ref sgui_spin_box), or not show the
entered text (e.g. for passwords, \see sgui_pass_box).
</td>
</tr>
<tr>
<td>
\image html iconview.png
</td>
<td>
An \ref sgui_icon_view widget displays an assortments of icons with text
underneath them. Icons can be clicked and draged around inside the view area.
An event is generated when an icon gets double clicked or the return key is
pressed on a selected icon. Events are generated when a delete/copy/cut key
combination is sent to an icon.
</td>
</tr>
<tr>
<td>
\image html progress.png
</td>
<td>
An \ref sgui_progress_bar widget indicates progress. There are different
styles (continuous and stippled). Vertical progress bars, that are filled from
bottom to top, also exist.
</td>
</tr>
<tr>
<td>
\image html static.png
</td>
<td>
Static images (\ref sgui_image) and label (\ref sgui_label) for displaying
purposes.
</td>
</tr>
<tr>
<td>
\image html glwidget.png
</td>
<td>
The black rectangle with a triangle inside is an \ref sgui_subview widget. It
manages a sub window. In this case, the sub window has an OpenGL&reg; context
bound to it and is redrawn by a callback.
</td>
</tr>
<tr>
<td>
\image html frame.png
</td>
<td>
The outermost rectangle is an \ref sgui_frame widget. It simply displays
widgets in an inset box. Children can be attached with
\ref sgui_widget_add_child and the frame will automatically display scroll
bars when it overflows.
</td>
</tr>
<tr>
<td>
\image html group.png
</td>
<td>
This is an \ref sgui_group_box widget. It just draws a fancy border with a
caption around its children to visually seperate and functionally group other
widgets.
</td>
</tr>
<tr>
<td>
\image html tab.png
</td>
<td>
This image show the captions of an \ref sgui_tab_group \b tab \b group widget.
Children added \b must \b be \ref sgui_tab widgets that manage the actual
display of child widgets.
</td>
</tr>
</table>
*/
