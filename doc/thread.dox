/**
\page thread

There is not much to say here. All SGUI functions that alter object state use
an internal global mutex to lock the entire library. It's not very effictient
as some things could actually be done concurrently, but it should work as a
simple way of ensuring thread safety and allow access to SGUI functions from
different threads. At some point it is neccessary, as some backend APIs aren't
thread safe.

There are a few things to keep in mind, however:
 - \ref sgui_init, \ref sgui_deinit, \ref sgui_main_loop and
   \ref sgui_main_loop_step have to be called from the same thread.
 - All event processing happens in the thread that the main loop runs in.
 - When an event callback is called, it has exclusive access to the entire
   library and runs in the thread that called \ref sgui_main_loop.
*/
